// Script para crear 100 conductores con datos realistas
// Uso: node src/scripts/create100Drivers.js

const { initializeApp } = require('firebase/app');
const { getFirestore, doc, setDoc } = require('firebase/firestore');

const firebaseConfig = {
  apiKey: "AIzaSyBzh0LvArSvGWUdMMZjD5xESqsxkFmrUnQ",
  authDomain: "tractomulas2025.firebaseapp.com",
  projectId: "tractomulas2025",
  storageBucket: "tractomulas2025.appspot.com",
  messagingSenderId: "944693735621",
  appId: "1:944693735621:web:a7603c0434cfe76ea1c0ac",
  measurementId: "G-9QW24GJY9M"
};

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

// Nombres realistas de pilotos
const PILOT_NAMES = [
  'Carlos Mendoza', 'Luis Rodr√≠guez', 'Juan P√©rez', 'Miguel Ruiz', 'Diego Herrera',
  'Andr√©s Moreno', 'Gabriel Medina', 'Sebasti√°n Ortiz', 'Felipe Navarro', 'Cristian Acosta',
  'Hector Mendez', 'Roberto Silva', 'Fernando Castro', 'Ricardo Paredes', 'Alejandro Fuentes',
  'Jorge Torres', 'Manuel Vargas', 'Pedro Morales', 'Alberto Rojas', 'Francisco Soto',
  'Daniel Vega', 'Mario Castillo', 'Eduardo Guzm√°n', 'Rafael Salazar', 'Antonio Cordoba',
  'Santiago Herrera', 'Nicol√°s Jim√©nez', 'Adri√°n L√≥pez', 'Marcelo Torres', 'Gustavo Silva',
  'Pablo Mendoza', 'Leonardo Ruiz', 'Rodrigo Castro', 'Federico Morales', 'Emilio Vargas',
  'Ignacio Rojas', 'Mat√≠as Soto', 'Tom√°s Castillo', 'Bruno Guzm√°n', 'Lucas Salazar',
  'Agust√≠n Cordoba', 'Valent√≠n Herrera', 'Maximiliano Jim√©nez', 'Thiago L√≥pez', 'Bautista Torres',
  'Santino Silva', 'Mateo Mendoza', 'Benjam√≠n Ruiz', 'Dante Castro', 'Lorenzo Morales',
  'Joaqu√≠n Vargas', 'Rafael Rojas', 'Santiago Soto', 'Nicol√°s Castillo', 'Adri√°n Guzm√°n',
  'Marcelo Salazar', 'Antonio Cordoba', 'Ignacio Herrera', 'Mat√≠as Jim√©nez', 'Tom√°s L√≥pez',
  'Bruno Torres', 'Lucas Silva', 'Agust√≠n Mendoza', 'Valent√≠n Ruiz', 'Maximiliano Castro',
  'Thiago Morales', 'Bautista Vargas', 'Santino Rojas', 'Mateo Soto', 'Benjam√≠n Castillo',
  'Dante Guzm√°n', 'Lorenzo Salazar', 'Joaqu√≠n Cordoba', 'Rafael Herrera', 'Santiago Jim√©nez',
  'Nicol√°s L√≥pez', 'Adri√°n Torres', 'Marcelo Silva', 'Antonio Mendoza', 'Ignacio Ruiz',
  'Mat√≠as Castro', 'Tom√°s Morales', 'Bruno Vargas', 'Lucas Rojas', 'Agust√≠n Soto',
  'Valent√≠n Castillo', 'Maximiliano Guzm√°n', 'Thiago Salazar', 'Bautista Cordoba', 'Santino Herrera',
  'Mateo Jim√©nez', 'Benjam√≠n L√≥pez', 'Dante Torres', 'Lorenzo Silva', 'Joaqu√≠n Mendoza',
  'Rafael Ruiz', 'Santiago Castro', 'Nicol√°s Morales', 'Adri√°n Vargas', 'Marcelo Rojas',
  'Antonio Soto', 'Ignacio Castillo', 'Mat√≠as Guzm√°n', 'Tom√°s Salazar', 'Bruno Cordoba'
];

// Empresas de transporte
const COMPANIES = [
  'Transportes R√°pidos', 'Log√≠stica Express', 'Carga Segura', 'Mensajer√≠a Nacional',
  'Transportes Unidos', 'Log√≠stica Integral', 'Carga Directa', 'Mensajer√≠a R√°pida',
  'Transportes Elite', 'Log√≠stica Premium', 'Carga Express', 'Mensajer√≠a Directa',
  'Transportes Pro', 'Log√≠stica Plus', 'Carga Nacional', 'Mensajer√≠a Elite',
  'Transportes Max', 'Log√≠stica Direct', 'Carga Plus', 'Mensajer√≠a Pro',
  'Transportes Plus', 'Log√≠stica Max', 'Carga Elite', 'Mensajer√≠a Plus'
];

// Generar placas realistas
function generatePlate() {
  const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
  const numbers = '0123456789';
  
  let plate = '';
  // 3 letras
  for (let i = 0; i < 3; i++) {
    plate += letters[Math.floor(Math.random() * letters.length)];
  }
  // 3 n√∫meros
  for (let i = 0; i < 3; i++) {
    plate += numbers[Math.floor(Math.random() * numbers.length)];
  }
  
  return plate;
}

// Generar imagen placeholder variada
function generateImageUrl(num) {
  const colors = ['red', 'blue', 'green', 'orange', 'purple', 'brown', 'gray', 'pink'];
  const color = colors[num % colors.length];
  return `https://via.placeholder.com/150/${color}/white?text=Piloto+${num}`;
}

async function createDrivers() {
  console.log('üöÄ Iniciando creaci√≥n de 100 pilotos...');
  console.log('‚è∞ Inicio:', new Date().toLocaleString());
  
  let createdDrivers = 0;
  let failedDrivers = 0;
  
  for (let i = 1; i <= 100; i++) {
    const driverName = PILOT_NAMES[i - 1] || `Piloto ${i}`;
    const company = COMPANIES[i % COMPANIES.length];
    const plate = generatePlate();
    const imageUrl = generateImageUrl(i);
    
    const driver = {
      id: `driver${i}`,
      conductor: driverName,
      placa: plate,
      img: imageUrl,
      NumeroLikes: 0,
      numeroCompetidor: i,
      empresa: company,
      createdAt: new Date().toISOString()
    };
    
    try {
      await setDoc(doc(db, 'drivers', driver.id), driver);
      console.log(`‚úÖ Piloto ${i}/100: ${driverName} (${plate}) - ${company}`);
      createdDrivers++;
    } catch (error) {
      console.error(`‚ùå Error creando piloto ${i}:`, error.message);
      failedDrivers++;
    }
    
    // Peque√±a pausa para no sobrecargar Firebase
    if (i % 10 === 0) {
      console.log(`üìä Progreso: ${i}/100 pilotos procesados`);
      await new Promise(resolve => setTimeout(resolve, 200));
    }
  }
  
  console.log('\nüéâ Proceso completado!');
  console.log(`‚úÖ Pilotos creados: ${createdDrivers}`);
  console.log(`‚ùå Pilotos fallidos: ${failedDrivers}`);
  console.log('‚è∞ Fin:', new Date().toLocaleString());
  
  // Mostrar estad√≠sticas
  console.log('\nüìä Estad√≠sticas:');
  console.log(`üöõ Total de pilotos en la base de datos: ${createdDrivers + failedDrivers}`);
  console.log(`üèÜ Pilotos listos para competir: ${createdDrivers}`);
}

createDrivers().catch(console.error); 